<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
	>
	<modelVersion>4.0.0</modelVersion>
	<groupId>mmo.utils.selenium_scripts</groupId>
	<artifactId>nzz_download</artifactId>
	<version>1.0.0</version>
	<name>nzz_download</name>
	<packaging>jar</packaging>
	
	<properties>
		<maven.compiler.source>21</maven.compiler.source>
		<maven.compiler.target>21</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<slf4j.version>2.0.13</slf4j.version>
		<log4j2-version>2.23.1</log4j2-version>
		<selenium-version>4.21.0</selenium-version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.32</version>
			<scope>provided</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>${selenium-version}</version>
		</dependency>

		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-chrome-driver</artifactId>
			<version>${selenium-version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/commons-cli/commons-cli -->
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.6.0</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-simple -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.testng/testng -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>7.9.0</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<appendAssemblyId>true</appendAssemblyId>
					<attach>false</attach>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<mainClass>mmo.utils.nzz_download.Download_NZZ</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- disabling the creation of the default .jar below didn't work but caused other errors :-( How can one disable that without an error? ->
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3.1</version>
				<executions>
					<execution>
						<id>default-jar</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
			<!- -->
			<plugin> <!-- found this solution here: https://stackoverflow.com/questions/5016467/only-create-executable-jar-with-dependencies-in-maven:
			              instead of avoiding the creation of the default.jar we rename it and rename the 'jar-with-dependencies' as well -->
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>rename-jar-with-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<move
									file="${project.build.directory}/${project.build.finalName}.jar"
									tofile="${project.build.directory}/${project.build.finalName}.jar.original" />
								<move
									file="${project.build.directory}/${project.build.finalName}-jar-with-dependencies.jar"
									tofile="${project.build.directory}/${project.build.finalName}.jar" />
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>	
	</build>
</project>